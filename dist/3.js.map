{"version":3,"sources":["webpack://POLY/./src/modules/three/examples/jsm/libs/inflate.module.min.js","webpack://POLY/./src/modules/three/examples/jsm/curves/NURBSUtils.js","webpack://POLY/./src/modules/three/examples/jsm/curves/NURBSCurve.js","webpack://POLY/./src/modules/three/examples/jsm/loaders/FBXLoader.js"],"names":["mod","l","aa","r","c","d","e","a","split","b","execScript","length","shift","t","Uint8Array","Uint16Array","Uint32Array","DataView","v","f","g","h","k","m","n","p","s","x","Number","POSITIVE_INFINITY","Array","w","this","input","i","y","index","bufferSize","bufferType","resize","A","z","j","Error","B","prototype","C","set","subarray","ba","ca","S","T","U","V","D","u","M","F","q","E","slice","P","fa","G","H","I","J","K","L","da","ea","N","O","R","ga","Q","W","verify","ha","method","o","push","buffer","charCodeAt","Y","Z","$","ia","X","ADAPTIVE","BLOCK","Object","keys","Inflate","Zlib","NURBSUtils","findSpan","low","high","mid","Math","floor","calcBasisFunctions","span","left","right","saved","rv","lv","temp","calcBSplinePoint","Vector4","point","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","s1","s2","rk","pk","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","clone","multiplyScalar","add","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","sub","divideScalar","calcNURBSDerivatives","calcSurfacePoint","target","uspan","vspan","Nu","Nv","Sw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","Curve","call","create","constructor","getPoint","optionalTarget","hpoint","getTangent","tangent","copy","normalize","fbxTree","connections","sceneGraph","FBXLoader","manager","Loader","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","littleEndian","dv","offset","undefined","FBXTree","getFbxVersion","text","match","parseInt","convertFBXTimeToSeconds","time","assign","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","parse","console","error","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","FBXText","cursor","read","result","isFbxFormatASCII","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Map","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","filename","pop","type","content","fileName","extension","lastIndexOf","toLowerCase","getHandler","warn","array","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","wrapT","values","Scaling","repeat","currentPath","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","color","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","displacementMap","emissiveMap","normalMap","envMap","mapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix4","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","PI","InnerAngle","MathUtils","degToRad","penumbra","OuterAngle","max","SpotLight","CastShadows","castShadow","geometry","attributes","vertexColors","FBX_Deformer","skinning","SkinnedMesh","normalizeSkinWeights","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","position","lookAt","bindMatrices","parsePoseNodes","geoConnParent","bind","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","AmbientLight","isMesh","morphAttributes","setupMorphMaterial","uuid","matUuid","sharedMat","mat","clonedMat","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","vertex","setAttribute","colors","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","UV","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Points","Form","vertices","getPoints","positions","toArray","BufferAttribute","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","invert","quaternion","euler","quaternionValues","premultiply","multiply","QuaternionKeyframeTrack","val","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","from","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","skip","version","getUint32","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","reader2","decompress","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","copyPosition","lParentGSM","lGlobalRS","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"mappings":"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","file":"3.js","sourcesContent":["/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Inflate=mod.Zlib.Inflate;\nexport { Inflate }\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Vector4} from 'three/src/math/Vector4';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\nvar NURBSUtils = {\n\n\t/*\n\tFinds knot vector span.\n\n\tp : degree\n\tu : parametric value\n\tU : knot vector\n\n\treturns the span\n\t*/\n\tfindSpan: function ( p, u, U ) {\n\n\t\tvar n = U.length - p - 1;\n\n\t\tif ( u >= U[ n ] ) {\n\n\t\t\treturn n - 1;\n\n\t\t}\n\n\t\tif ( u <= U[ p ] ) {\n\n\t\t\treturn p;\n\n\t\t}\n\n\t\tvar low = p;\n\t\tvar high = n;\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\n\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\t\tif ( u < U[ mid ] ) {\n\n\t\t\t\thigh = mid;\n\n\t\t\t} else {\n\n\t\t\t\tlow = mid;\n\n\t\t\t}\n\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t\t}\n\n\t\treturn mid;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tU    : knot vector\n\n\treturns array[p+1] with basis functions values.\n\t*/\n\tcalcBasisFunctions: function ( span, u, p, U ) {\n\n\t\tvar N = [];\n\t\tvar left = [];\n\t\tvar right = [];\n\t\tN[ 0 ] = 1.0;\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\n\t\t\t\tN[ r ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t }\n\n\t\t\t N[ j ] = saved;\n\n\t\t }\n\n\t\t return N;\n\n\t},\n\n\n\t/*\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\n\tp : degree of B-Spline\n\tU : knot vector\n\tP : control points (x, y, z, w)\n\tu : parametric point\n\n\treturns point for given u\n\t*/\n\tcalcBSplinePoint: function ( p, U, P, u ) {\n\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tvar point = P[ span - p + j ];\n\t\t\tvar Nj = N[ j ];\n\t\t\tvar wNj = point.w * Nj;\n\t\t\tC.x += point.x * wNj;\n\t\t\tC.y += point.y * wNj;\n\t\t\tC.z += point.z * wNj;\n\t\t\tC.w += point.w * Nj;\n\n\t\t}\n\n\t\treturn C;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tn    : number of derivatives to calculate\n\tU    : knot vector\n\n\treturns array[n+1][p+1] with basis functions derivatives\n\t*/\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\n\n\t\tvar zeroArr = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tzeroArr[ i ] = 0.0;\n\n\t\tvar ders = [];\n\t\tfor ( var i = 0; i <= n; ++ i )\n\t\t\tders[ i ] = zeroArr.slice( 0 );\n\n\t\tvar ndu = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\t\tndu[ 0 ][ 0 ] = 1.0;\n\n\t\tvar left = zeroArr.slice( 0 );\n\t\tvar right = zeroArr.slice( 0 );\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t}\n\n\t\t\tndu[ j ][ j ] = saved;\n\n\t\t}\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t\t}\n\n\t\tfor ( var r = 0; r <= p; ++ r ) {\n\n\t\t\tvar s1 = 0;\n\t\t\tvar s2 = 1;\n\n\t\t\tvar a = [];\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\n\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t\t}\n\n\t\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\t\tvar d = 0.0;\n\t\t\t\tvar rk = r - k;\n\t\t\t\tvar pk = p - k;\n\n\t\t\t\tif ( r >= k ) {\n\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\n\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( r <= pk ) {\n\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tders[ k ][ r ] = d;\n\n\t\t\t\tvar j = s1;\n\t\t\t\ts1 = s2;\n\t\t\t\ts2 = j;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar r = p;\n\n\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\t\tders[ k ][ j ] *= r;\n\n\t\t\t}\n\n\t\t\tr *= p - k;\n\n\t\t}\n\n\t\treturn ders;\n\n\t},\n\n\n\t/*\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\t\tp  : degree\n\t\tU  : knot vector\n\t\tP  : control points\n\t\tu  : Parametric points\n\t\tnd : number of derivatives\n\n\t\treturns array[d+1] with derivatives\n\t\t*/\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar du = nd < p ? nd : p;\n\t\tvar CK = [];\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\n\t\tvar Pw = [];\n\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\n\n\t\t\tvar point = P[ i ].clone();\n\t\t\tvar w = point.w;\n\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\n\t\t\tPw[ i ] = point;\n\n\t\t}\n\n\t\tfor ( var k = 0; k <= du; ++ k ) {\n\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = point;\n\n\t\t}\n\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate \"K over I\"\n\n\treturns k!/(i!(k-i)!)\n\t*/\n\tcalcKoverI: function ( k, i ) {\n\n\t\tvar nom = 1;\n\n\t\tfor ( var j = 2; j <= k; ++ j ) {\n\n\t\t\tnom *= j;\n\n\t\t}\n\n\t\tvar denom = 1;\n\n\t\tfor ( var j = 2; j <= i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\treturn nom / denom;\n\n\t},\n\n\n\t/*\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\n\tPders : result of function calcBSplineDerivatives\n\n\treturns array with derivatives for rational curve.\n\t*/\n\tcalcRationalCurveDerivatives: function ( Pders ) {\n\n\t\tvar nd = Pders.length;\n\t\tvar Aders = [];\n\t\tvar wders = [];\n\n\t\tfor ( var i = 0; i < nd; ++ i ) {\n\n\t\t\tvar point = Pders[ i ];\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\t\twders[ i ] = point.w;\n\n\t\t}\n\n\t\tvar CK = [];\n\n\t\tfor ( var k = 0; k < nd; ++ k ) {\n\n\t\t\tvar v = Aders[ k ].clone();\n\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\n\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points in homogeneous space\n\tu  : parametric points\n\tnd : number of derivatives\n\n\treturns array with derivatives.\n\t*/\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\n\t\treturn this.calcRationalCurveDerivatives( Pders );\n\n\t},\n\n\n\t/*\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\n\tp1, p2 : degrees of B-Spline surface\n\tU1, U2 : knot vectors\n\tP      : control points (x, y, z, w)\n\tu, v   : parametric values\n\n\treturns point for given (u, v)\n\t*/\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\n\n\t\tvar uspan = this.findSpan( p, u, U );\n\t\tvar vspan = this.findSpan( q, v, V );\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\n\t\tvar temp = [];\n\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\n\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\t\tvar w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t\tSw.divideScalar( Sw.w );\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n\t}\n\n};\n\nexport { NURBSUtils };\n","import {Curve} from 'three/src/extras/core/Curve';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector4} from 'three/src/math/Vector4';\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tvar tangent = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\ttangent.copy( ders[ 1 ] ).normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n","import {AmbientLight} from 'three/src/lights/AmbientLight';\nimport {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {EquirectangularReflectionMapping} from 'three/src/constants';\nimport {Euler} from 'three/src/math/Euler';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Group} from 'three/src/objects/Group';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {Matrix3} from 'three/src/math/Matrix3';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshLambertMaterial} from 'three/src/materials/MeshLambertMaterial';\nimport {MeshPhongMaterial} from 'three/src/materials/MeshPhongMaterial';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {Quaternion} from 'three/src/math/Quaternion';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {Texture} from 'three/src/textures/Texture';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {Uint16BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector4} from 'three/src/math/Vector4';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {sRGBEncoding} from 'three/src/constants';\nimport { Inflate } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nvar FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( scope.requestHeader );\n\t\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar scope = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar scope = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tscope.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscope.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar scope = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar scope = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar scope = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar scope = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tscope.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tif ( version < 6400 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t\t}\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Inflate === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tlParentTM.copyPosition( lParentGX );\n\n\t\tvar lParentGSM = new Matrix4();\n\t\tlParentGSM.copy( lParentGRM ).invert().multiply( lParentGX );\n\n\t\tvar lGlobalRS = new Matrix4();\n\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lScalingM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lScalingM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM_inv = new Matrix4();\n\t\t\tlParentLSM_inv.copy( lScalingM ).invert();\n\t\t\tvar lParentGSM_noLocal = new Matrix4().multiply( lParentGSM ).multiply( lParentLSM_inv );\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lScalingM );\n\n\t\t}\n\n\t\tvar lRotationPivotM_inv = new Matrix4();\n\t\tlRotationPivotM_inv.copy( lRotationPivotM ).invert();\n\t\tvar lScalingPivotM_inv = new Matrix4();\n\t\tlScalingPivotM_inv.copy( lScalingPivotM ).invert();\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = new Matrix4();\n\t\tlTransform.copy( lTranslationM ).multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = new Matrix4().copy( lParentGX ).multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = new Matrix4().multiply( lGlobalT ).multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\nexport { FBXLoader };\n"],"sourceRoot":""}