{"version":3,"sources":["webpack://POLY/./src/modules/core/loaders/TTFLoader.js"],"names":["TTFLoader","manager","call","this","reversed","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","arraybuffer","reverseCommands","commands","paths","forEach","c","type","toLowerCase","push","p","result","x","length","y","i","command","undefined","x2","y2","x1","y1","warn","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","keys","unicode","glyph","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name","convert"],"mappings":"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","file":"2.0c65a1933e568fe1bd82.js","sourcesContent":["//\n//\n// COPY of TTFLoader from three.js\n// in order to avoid the require calls from the opentype shipped with three.js\n//\n//\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Loader} from 'three/src/loaders/Loader';\nimport opentype from 'opentype.js/dist/opentype.module';\n\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nvar TTFLoader = function (manager) {\n\tLoader.call(this, manager);\n\n\tthis.reversed = false;\n};\n\nTTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\tconstructor: TTFLoader,\n\n\tload: function (url, onLoad, onProgress, onError) {\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader(this.manager);\n\t\tloader.setPath(this.path);\n\t\tloader.setResponseType('arraybuffer');\n\t\tloader.setRequestHeader(this.requestHeader);\n\t\tloader.setWithCredentials(this.withCredentials);\n\t\tloader.load(\n\t\t\turl,\n\t\t\tfunction (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(buffer));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonProgress,\n\t\t\tonError\n\t\t);\n\t},\n\n\tparse: function (arraybuffer) {\n\t\tfunction convert(font, reversed) {\n\t\t\tvar round = Math.round;\n\n\t\t\tvar glyphs = {};\n\t\t\tvar scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n\n\t\t\tvar glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n\t\t\tvar unicodes = Object.keys(glyphIndexMap);\n\n\t\t\tfor (var i = 0; i < unicodes.length; i++) {\n\t\t\t\tvar unicode = unicodes[i];\n\t\t\t\tvar glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n\t\t\t\tif (unicode !== undefined) {\n\t\t\t\t\tvar token = {\n\t\t\t\t\t\tha: round(glyph.advanceWidth * scale),\n\t\t\t\t\t\tx_min: round(glyph.xMin * scale),\n\t\t\t\t\t\tx_max: round(glyph.xMax * scale),\n\t\t\t\t\t\to: '',\n\t\t\t\t\t};\n\n\t\t\t\t\tif (reversed) {\n\t\t\t\t\t\tglyph.path.commands = reverseCommands(glyph.path.commands);\n\t\t\t\t\t}\n\n\t\t\t\t\tglyph.path.commands.forEach(function (command) {\n\t\t\t\t\t\tif (command.type.toLowerCase() === 'c') {\n\t\t\t\t\t\t\tcommand.type = 'b';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoken.o += command.type.toLowerCase() + ' ';\n\n\t\t\t\t\t\tif (command.x !== undefined && command.y !== undefined) {\n\t\t\t\t\t\t\ttoken.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (command.x1 !== undefined && command.y1 !== undefined) {\n\t\t\t\t\t\t\ttoken.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (command.x2 !== undefined && command.y2 !== undefined) {\n\t\t\t\t\t\t\ttoken.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tglyphs[String.fromCodePoint(glyph.unicode)] = token;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tglyphs: glyphs,\n\t\t\t\tfamilyName: font.getEnglishName('fullName'),\n\t\t\t\tascender: round(font.ascender * scale),\n\t\t\t\tdescender: round(font.descender * scale),\n\t\t\t\tunderlinePosition: font.tables.post.underlinePosition,\n\t\t\t\tunderlineThickness: font.tables.post.underlineThickness,\n\t\t\t\tboundingBox: {\n\t\t\t\t\txMin: font.tables.head.xMin,\n\t\t\t\t\txMax: font.tables.head.xMax,\n\t\t\t\t\tyMin: font.tables.head.yMin,\n\t\t\t\t\tyMax: font.tables.head.yMax,\n\t\t\t\t},\n\t\t\t\tresolution: 1000,\n\t\t\t\toriginal_font_information: font.tables.name,\n\t\t\t};\n\t\t}\n\n\t\tfunction reverseCommands(commands) {\n\t\t\tvar paths = [];\n\t\t\tvar path;\n\n\t\t\tcommands.forEach(function (c) {\n\t\t\t\tif (c.type.toLowerCase() === 'm') {\n\t\t\t\t\tpath = [c];\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t} else if (c.type.toLowerCase() !== 'z') {\n\t\t\t\t\tpath.push(c);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar reversed = [];\n\n\t\t\tpaths.forEach(function (p) {\n\t\t\t\tvar result = {\n\t\t\t\t\ttype: 'm',\n\t\t\t\t\tx: p[p.length - 1].x,\n\t\t\t\t\ty: p[p.length - 1].y,\n\t\t\t\t};\n\n\t\t\t\treversed.push(result);\n\n\t\t\t\tfor (var i = p.length - 1; i > 0; i--) {\n\t\t\t\t\tvar command = p[i];\n\t\t\t\t\tvar result = {type: command.type};\n\n\t\t\t\t\tif (command.x2 !== undefined && command.y2 !== undefined) {\n\t\t\t\t\t\tresult.x1 = command.x2;\n\t\t\t\t\t\tresult.y1 = command.y2;\n\t\t\t\t\t\tresult.x2 = command.x1;\n\t\t\t\t\t\tresult.y2 = command.y1;\n\t\t\t\t\t} else if (command.x1 !== undefined && command.y1 !== undefined) {\n\t\t\t\t\t\tresult.x1 = command.x1;\n\t\t\t\t\t\tresult.y1 = command.y1;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.x = p[i - 1].x;\n\t\t\t\t\tresult.y = p[i - 1].y;\n\t\t\t\t\treversed.push(result);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn reversed;\n\t\t}\n\n\t\tif (typeof opentype === 'undefined') {\n\t\t\tconsole.warn(\n\t\t\t\t\"THREE.TTFLoader: The loader requires opentype.js. Make sure it's included before using the loader.\"\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn convert(opentype.parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n\t},\n});\n\nexport {TTFLoader};\n"],"sourceRoot":""}