// import {CameraController} from 'src/core/CameraController';
// import {BaseObjectNode} from '../_Base';
// import {Object3D} from 'three';

// export function LookAt<TBase extends Constructor>(Base: TBase) {
// 	return class Mixin extends Base {
// 		protected self: BaseObjectNode = (<unknown>this) as BaseObjectNode;
// 		_camera_controller: CameraController;

// 		_init_look_at() {
// 			//@_update_from_look_at_target_listener = this._update_from_look_at_target.bind(this)
// 			return (this._camera_controller = new CameraController(this._update_from_look_at_target.bind(this)));
// 		}

// 		_use_look_at_param() {
// 			this.self.param('look_at').find_node((look_at_node: BaseObjectNode) => {
// 				//@_look_at_target_object = null

// 				if (look_at_node != null) {
// 					//@_look_at_target_object = look_at_node.object()
// 					this._camera_controller.set_target(look_at_node.object());
// 					//this._look_at_position_with_up( @_look_at_target_object.position, @_param_up )

// 					//this._add_camera_event()
// 				} else {
// 					//this._remove_camera_event()
// 					this._camera_controller.remove_target();

// 					this.self.update_transform_with_matrix();
// 				}
// 			});
// 		}

// 		// _look_at_position_with_up: (position, up)->
// 		// 	if (object = this.object())?

// 		// 		object.matrixAutoUpdate = true
// 		// 		object.up.copy( up )
// 		// 		object.lookAt( position )

// 		// 	else
// 		// 		console.log("no object yet", this.fullPath(), @_object)

// 		_update_from_look_at_target(look_at_target: Object3D) {
// 			// TODO: should that set the node to dirty?
// 			// that doesn't seem required if it's the display node
// 			//if @_look_at_target_object?
// 			//this._look_at_position_with_up( position, @_param_up )

// 			const object = this.self.object();
// 			if (object != null) {
// 				// const target_matrix = look_at_target;

// 				object.matrixAutoUpdate = true;
// 				object.up.copy(this.self._param_up);
// 				return object.lookAt(look_at_target.position);
// 			} else {
// 				return console.log('no object yet', this.self.fullPath());
// 			}
// 		}
// 	};
// }

// // _add_camera_event: ->
// // 	@_look_at_target_object?.addEventListener EVENT.CHANGE, @_update_from_look_at_target_listener
// // _remove_camera_event: ->
// // 	@_look_at_target_object?.removeEventListener EVENT.CHANGE, @_update_from_look_at_target_listener
