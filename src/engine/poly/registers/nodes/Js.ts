import {CATEGORY_JS} from './Category';

import {AbsJsNode} from '../../../nodes/js/Abs';
import {AcosJsNode} from '../../../nodes/js/Acos';
import {AddJsNode} from '../../../nodes/js/Add';
import {AnimationActionJsNode} from '../../../nodes/js/AnimationAction';
import {AnimationActionCrossFadeJsNode} from '../../../nodes/js/AnimationActionCrossFade';
import {AnimationActionFadeOutJsNode} from '../../../nodes/js/AnimationActionFadeOut';
import {AnimationActionFadeInJsNode} from '../../../nodes/js/AnimationActionFadeIn';
import {AnimationActionPlayJsNode} from '../../../nodes/js/AnimationActionPlay';
import {AnimationActionStopJsNode} from '../../../nodes/js/AnimationActionStop';
import {AnimationMixerJsNode} from '../../../nodes/js/AnimationMixer';
import {AnimationMixerUpdateJsNode} from '../../../nodes/js/AnimationMixerUpdate';
import {AsinJsNode} from '../../../nodes/js/Asin';
import {AtanJsNode} from '../../../nodes/js/Atan';
import {AttributeJsNode} from '../../../nodes/js/Attribute';
import {BoolToIntJsNode} from '../../../nodes/js/BoolToInt';
import {CeilJsNode} from '../../../nodes/js/Ceil';
import {ColorToVec3JsNode} from '../../../nodes/js/ColorToVec3';
import {ConstantJsNode} from '../../../nodes/js/Constant';
import {CosJsNode} from '../../../nodes/js/Cos';
import {CursorJsNode} from '../../../nodes/js/Cursor';
import {DivideJsNode} from '../../../nodes/js/Divide';
import {FloatToColorJsNode} from '../../../nodes/js/FloatToColor';
import {FloatToIntJsNode} from '../../../nodes/js/FloatToInt';
import {FloatToVec2JsNode} from '../../../nodes/js/FloatToVec2';
import {FloatToVec3JsNode} from '../../../nodes/js/FloatToVec3';
import {FloatToVec4JsNode} from '../../../nodes/js/FloatToVec4';
import {FloorJsNode} from '../../../nodes/js/Floor';
import {GetObjectJsNode} from '../../../nodes/js/GetObject';
import {GetObjectAttributeJsNode} from '../../../nodes/js/GetObjectAttribute';
import {GetObjectPropertyJsNode} from '../../../nodes/js/GetObjectProperty';
import {GetPhysicsRBDConePropertyJsNode} from '../../../nodes/js/GetPhysicsRBDConeProperty';
import {GetPhysicsRBDCapsulePropertyJsNode} from '../../../nodes/js/GetPhysicsRBDCapsuleProperty';
import {GetPhysicsRBDCylinderPropertyJsNode} from '../../../nodes/js/GetPhysicsRBDCylinderProperty';
import {GetPhysicsRBDCuboidPropertyJsNode} from '../../../nodes/js/GetPhysicsRBDCuboidProperty';
import {GetPhysicsRBDSpherePropertyJsNode} from '../../../nodes/js/GetPhysicsRBDSphereProperty';
import {GetPhysicsRBDPropertyJsNode} from '../../../nodes/js/GetPhysicsRBDProperty';
import {GetParentJsNode} from '../../../nodes/js/GetParent';
import {GlobalsJsNode} from '../../../nodes/js/Globals';
import {IntToBoolJsNode} from '../../../nodes/js/IntToBool';
import {IntToFloatJsNode} from '../../../nodes/js/IntToFloat';
import {MultJsNode} from '../../../nodes/js/Mult';
import {OnKeydownJsNode} from '../../../nodes/js/OnKeydown';
import {OnKeypressJsNode} from '../../../nodes/js/OnKeypress';
import {OnKeyupJsNode} from '../../../nodes/js/OnKeyup';
import {OnManualTriggerJsNode} from '../../../nodes/js/OnManualTrigger';
import {OnMapboxCameraMoveJsNode} from '../../../nodes/js/OnMapboxCameraMove';
import {OnMapboxCameraMoveEndJsNode} from '../../../nodes/js/OnMapboxCameraMoveEnd';
import {OnMapboxCameraMoveStartJsNode} from '../../../nodes/js/OnMapboxCameraMoveStart';
import {OnObjectAttributeUpdateJsNode} from '../../../nodes/js/OnObjectAttributeUpdate';
import {OnObjectClickJsNode} from '../../../nodes/js/OnObjectClick';
import {OnObjectHoverJsNode} from '../../../nodes/js/OnObjectHover';
import {OnPerformanceChangeJsNode} from '../../../nodes/js/OnPerformanceChange';
import {OnScenePauseJsNode} from '../../../nodes/js/OnScenePause';
import {OnScenePlayJsNode} from '../../../nodes/js/OnScenePlay';
import {OnSceneResetJsNode} from '../../../nodes/js/OnSceneReset';
import {OnTickJsNode} from '../../../nodes/js/OnTick';
import {OutputJsNode} from '../../../nodes/js/Output';
import {ParamJsNode} from '../../../nodes/js/Param';
import {ParticlesSystemResetJsNode} from '../../../nodes/js/ParticlesSystemReset';
import {ParticlesSystemStepSimulationJsNode} from '../../../nodes/js/ParticlesSystemStepSimulation';
import {PhysicsWorldResetJsNode} from '../../../nodes/js/PhysicsWorldReset';
import {PhysicsWorldStepSimulationJsNode} from '../../../nodes/js/PhysicsWorldStepSimulation';
import {PlaneJsNode} from '../../../nodes/js/Plane';
import {RayFromCursorJsNode} from '../../../nodes/js/RayFromCursor';
import {RayIntersectPlaneJsNode} from '../../../nodes/js/RayIntersectPlane';
import {RoundJsNode} from '../../../nodes/js/Round';
import {SDF2DRoundedXJsNode} from '../../../nodes/js/SDF2DRoundedX';
import {SDFBoxJsNode} from '../../../nodes/js/SDFBox';
import {SDFIntersectJsNode} from '../../../nodes/js/SDFIntersect';
import {SDFRevolutionJsNode} from '../../../nodes/js/SDFRevolution';
import {SDFSphereJsNode} from '../../../nodes/js/SDFSphere';
import {SDFSubtractJsNode} from '../../../nodes/js/SDFSubtract';
import {SDFUnionJsNode} from '../../../nodes/js/SDFUnion';
import {SetObjectAttributeJsNode} from '../../../nodes/js/SetObjectAttribute';
import {SetObjectLookAtJsNode} from '../../../nodes/js/SetObjectLookAt';
import {SetObjectMaterialJsNode} from '../../../nodes/js/SetObjectMaterial';
import {SetObjectMaterialColorJsNode} from '../../../nodes/js/SetObjectMaterialColor';
import {SetObjectPositionJsNode} from '../../../nodes/js/SetObjectPosition';
import {SetObjectScaleJsNode} from '../../../nodes/js/SetObjectScale';
import {SetPhysicsRBDAngularVelocityJsNode} from '../../../nodes/js/SetPhysicsRBDAngularVelocity';
import {SetPhysicsRBDLinearVelocityJsNode} from '../../../nodes/js/SetPhysicsRBDLinearVelocity';
import {SetPhysicsRBDPositionJsNode} from '../../../nodes/js/SetPhysicsRBDPosition';
import {SetPhysicsRBDRotationJsNode} from '../../../nodes/js/SetPhysicsRBDRotation';
import {SetPhysicsRBDCapsulePropertyJsNode} from '../../../nodes/js/SetPhysicsRBDCapsuleProperty';
import {SetPhysicsRBDConePropertyJsNode} from '../../../nodes/js/SetPhysicsRBDConeProperty';
import {SetPhysicsRBDCylinderPropertyJsNode} from '../../../nodes/js/SetPhysicsRBDCylinderProperty';
import {SetPhysicsRBDCuboidPropertyJsNode} from '../../../nodes/js/SetPhysicsRBDCuboidProperty';
import {SetPhysicsRBDSpherePropertyJsNode} from '../../../nodes/js/SetPhysicsRBDSphereProperty';

import {SetPhysicsWorldGravityJsNode} from '../../../nodes/js/SetPhysicsWorldGravity';
import {SignJsNode} from '../../../nodes/js/Sign';
import {SinJsNode} from '../../../nodes/js/Sin';
import {SqrtJsNode} from '../../../nodes/js/Sqrt';
import {SubtractJsNode} from '../../../nodes/js/Subtract';
import {SwitchJsNode} from '../../../nodes/js/Switch';
import {TanJsNode} from '../../../nodes/js/Tan';
import {TwoWaySwitchJsNode} from '../../../nodes/js/TwoWaySwitch';
import {Vec2ToFloatJsNode} from '../../../nodes/js/Vec2ToFloat';
import {Vec2ToVec3JsNode} from '../../../nodes/js/Vec2ToVec3';
import {Vec3ToFloatJsNode} from '../../../nodes/js/Vec3ToFloat';
import {Vec3ToColorJsNode} from '../../../nodes/js/Vec3ToColor';
import {Vec3ToVec2JsNode} from '../../../nodes/js/Vec3ToVec2';
import {Vec3ToVec4JsNode} from '../../../nodes/js/Vec3ToVec4';
import {Vec4ToFloatJsNode} from '../../../nodes/js/Vec4ToFloat';
import {Vec4ToVec3JsNode} from '../../../nodes/js/Vec4ToVec3';

export interface JsNodeChildrenMap {
	abs: AbsJsNode;
	add: AddJsNode;
	acos: AcosJsNode;
	animationAction: AnimationActionJsNode;
	animationActionCrossFade: AnimationActionCrossFadeJsNode;
	animationActionFadeOut: AnimationActionFadeOutJsNode;
	animationActionFadeIn: AnimationActionFadeInJsNode;
	animationActionPlay: AnimationActionPlayJsNode;
	animationActionStop: AnimationActionStopJsNode;
	animationMixer: AnimationMixerJsNode;
	animationMixerUpdate: AnimationMixerUpdateJsNode;
	asin: AsinJsNode;
	atan: AtanJsNode;
	attribute: AttributeJsNode;
	boolToInt: BoolToIntJsNode;
	ceil: CeilJsNode;
	cos: CosJsNode;
	cursor: CursorJsNode;
	colorToVec3: ColorToVec3JsNode;
	constant: ConstantJsNode;
	divide: DivideJsNode;
	floatToColor: FloatToColorJsNode;
	floatToInt: FloatToIntJsNode;
	floatToVec2: FloatToVec2JsNode;
	floatToVec3: FloatToVec3JsNode;
	floatToVec4: FloatToVec4JsNode;
	floor: FloorJsNode;
	getObject: GetObjectJsNode;
	getObjectAttribute: GetObjectAttributeJsNode;
	getObjectProperty: GetObjectPropertyJsNode;
	getParent: GetParentJsNode;
	getPhysicsRBDCapsuleProperty: GetPhysicsRBDCapsulePropertyJsNode;
	getPhysicsRBDConeProperty: GetPhysicsRBDConePropertyJsNode;
	getPhysicsRBDCylinderProperty: GetPhysicsRBDCylinderPropertyJsNode;
	getPhysicsRBDCuboidProperty: GetPhysicsRBDCuboidPropertyJsNode;
	getPhysicsRBDSphereProperty: GetPhysicsRBDSpherePropertyJsNode;
	getPhysicsRBDProperty: GetPhysicsRBDPropertyJsNode;
	globals: GlobalsJsNode;
	intToBool: IntToBoolJsNode;
	intToFloat: IntToFloatJsNode;
	mult: MultJsNode;
	onKeydown: OnKeydownJsNode;
	onKeypress: OnKeypressJsNode;
	onKeyup: OnKeyupJsNode;
	onManualTrigger: OnManualTriggerJsNode;
	onMapboxCameraMove: OnMapboxCameraMoveJsNode;
	onMapboxCameraMoveEnd: OnMapboxCameraMoveEndJsNode;
	onMapboxCameraMoveStart: OnMapboxCameraMoveStartJsNode;
	onObjectAttributeUpdate: OnObjectAttributeUpdateJsNode;
	onObjectClick: OnObjectClickJsNode;
	onObjectHover: OnObjectHoverJsNode;
	onPerformanceChange: OnPerformanceChangeJsNode;
	onScenePause: OnScenePauseJsNode;
	onScenePlay: OnScenePlayJsNode;
	onSceneReset: OnSceneResetJsNode;
	onTick: OnTickJsNode;
	output: OutputJsNode;
	param: ParamJsNode;
	particlesSystemReset: ParticlesSystemResetJsNode;
	particlesSystemStepSimulation: ParticlesSystemStepSimulationJsNode;
	physicsWorldReset: PhysicsWorldResetJsNode;
	physicsWorldStepSimulation: PhysicsWorldStepSimulationJsNode;
	plane: PlaneJsNode;
	rayFromCursor: RayFromCursorJsNode;
	rayIntersectPlane: RayIntersectPlaneJsNode;
	round: RoundJsNode;
	SDF2DRoundedX: SDF2DRoundedXJsNode;
	SDFBox: SDFBoxJsNode;
	SDFIntersect: SDFIntersectJsNode;
	SDFRevolution: SDFRevolutionJsNode;
	SDFSphere: SDFSphereJsNode;
	SDFSubtract: SDFSubtractJsNode;
	SDFUnion: SDFUnionJsNode;
	setObjectAttribute: SetObjectAttributeJsNode;
	setObjectLookAt: SetObjectLookAtJsNode;
	setObjectMaterial: SetObjectMaterialJsNode;
	setObjectMaterialColor: SetObjectMaterialColorJsNode;
	setObjectPosition: SetObjectPositionJsNode;
	setObjectScale: SetObjectScaleJsNode;
	setPhysicsRBDAngularVelocity: SetPhysicsRBDAngularVelocityJsNode;
	setPhysicsRBDLinearVelocity: SetPhysicsRBDLinearVelocityJsNode;
	setPhysicsRBDPosition: SetPhysicsRBDPositionJsNode;
	setPhysicsRBDRotation: SetPhysicsRBDRotationJsNode;
	setPhysicsRBDCapsuleProperty: SetPhysicsRBDCapsulePropertyJsNode;
	setPhysicsRBDConeProperty: SetPhysicsRBDConePropertyJsNode;
	setPhysicsRBDCylinderProperty: SetPhysicsRBDCylinderPropertyJsNode;
	setPhysicsRBDCuboidProperty: SetPhysicsRBDCuboidPropertyJsNode;
	setPhysicsRBDSphereProperty: SetPhysicsRBDSpherePropertyJsNode;
	setPhysicsWorldGravity: SetPhysicsWorldGravityJsNode;
	sign: SignJsNode;
	sin: SinJsNode;
	sqrt: SqrtJsNode;
	subtract: SubtractJsNode;
	switch: SwitchJsNode;
	tan: TanJsNode;
	twoWaySwitch: TwoWaySwitchJsNode;
	vec2ToFloat: Vec2ToFloatJsNode;
	vec2ToVec3: Vec2ToVec3JsNode;
	vec3ToColor: Vec3ToColorJsNode;
	vec3ToFloat: Vec3ToFloatJsNode;
	vec3ToVec2: Vec3ToVec2JsNode;
	vec3ToVec4: Vec3ToVec4JsNode;
	vec4ToFloat: Vec4ToFloatJsNode;
	vec4ToVec3: Vec4ToVec3JsNode;
}

import {PolyEngine} from '../../../Poly';
import {SopType} from './types/Sop';
import {NodeContext} from '../../NodeContext';
const sopType = (type: SopType) => `${NodeContext.SOP}/${type}`;
const ONLY_WITH_GLOBALS = {only: [sopType(SopType.SDF_BUILDER)]};
const ONLY_ACTOR = {only: [sopType(SopType.ACTOR_JS), sopType(SopType.PHYSICS_WORLD)]};
export class JsRegister {
	static run(poly: PolyEngine) {
		// poly.registerNode(AttributeJsNode, CATEGORY_JS.GLOBALS);
		poly.registerNode(AbsJsNode, CATEGORY_JS.MATH);
		poly.registerNode(AcosJsNode, CATEGORY_JS.MATH);
		poly.registerNode(AddJsNode, CATEGORY_JS.MATH);
		poly.registerNode(AnimationActionJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationActionCrossFadeJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationActionFadeOutJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationActionFadeInJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationActionPlayJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationActionStopJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationMixerJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AnimationMixerUpdateJsNode, CATEGORY_JS.ANIMATION);
		poly.registerNode(AsinJsNode, CATEGORY_JS.MATH);
		poly.registerNode(AtanJsNode, CATEGORY_JS.MATH);
		poly.registerNode(BoolToIntJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(CeilJsNode, CATEGORY_JS.MATH);
		poly.registerNode(ColorToVec3JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(ConstantJsNode, CATEGORY_JS.GLOBALS);
		poly.registerNode(CosJsNode, CATEGORY_JS.MATH);
		poly.registerNode(CursorJsNode, CATEGORY_JS.INPUTS, ONLY_ACTOR);
		poly.registerNode(FloatToColorJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(FloatToIntJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(FloatToVec2JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(FloatToVec3JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(FloatToVec4JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(FloorJsNode, CATEGORY_JS.MATH);
		poly.registerNode(DivideJsNode, CATEGORY_JS.MATH);
		poly.registerNode(GetObjectJsNode, CATEGORY_JS.GET, ONLY_ACTOR);
		poly.registerNode(GetObjectAttributeJsNode, CATEGORY_JS.GET, ONLY_ACTOR);
		poly.registerNode(GetObjectPropertyJsNode, CATEGORY_JS.GET, ONLY_ACTOR);
		poly.registerNode(GetParentJsNode, CATEGORY_JS.GET, ONLY_ACTOR);
		poly.registerNode(GetPhysicsRBDCapsulePropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(GetPhysicsRBDConePropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(GetPhysicsRBDCylinderPropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(GetPhysicsRBDCuboidPropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(GetPhysicsRBDSpherePropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(GetPhysicsRBDPropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(GlobalsJsNode, CATEGORY_JS.GLOBALS, ONLY_WITH_GLOBALS);
		poly.registerNode(IntToBoolJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(IntToFloatJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(MultJsNode, CATEGORY_JS.MATH);
		poly.registerNode(OnKeydownJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnKeypressJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnKeyupJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnManualTriggerJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnMapboxCameraMoveJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnMapboxCameraMoveEndJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnMapboxCameraMoveStartJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnObjectAttributeUpdateJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnObjectClickJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnObjectHoverJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnPerformanceChangeJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnScenePauseJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnScenePlayJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnSceneResetJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OnTickJsNode, CATEGORY_JS.EVENTS, ONLY_ACTOR);
		poly.registerNode(OutputJsNode, CATEGORY_JS.GLOBALS, ONLY_WITH_GLOBALS);
		poly.registerNode(ParamJsNode, CATEGORY_JS.GLOBALS);
		poly.registerNode(ParticlesSystemResetJsNode, CATEGORY_JS.PARTICLES);
		poly.registerNode(ParticlesSystemStepSimulationJsNode, CATEGORY_JS.PARTICLES);
		poly.registerNode(PhysicsWorldResetJsNode, CATEGORY_JS.PHYSICS);
		poly.registerNode(PhysicsWorldStepSimulationJsNode, CATEGORY_JS.PHYSICS);
		poly.registerNode(PlaneJsNode, CATEGORY_JS.MATH);
		poly.registerNode(RayFromCursorJsNode, CATEGORY_JS.INPUTS);
		poly.registerNode(RayIntersectPlaneJsNode, CATEGORY_JS.MATH);
		poly.registerNode(RoundJsNode, CATEGORY_JS.MATH);
		poly.registerNode(SDF2DRoundedXJsNode, CATEGORY_JS.SDF_PRIMITIVES_2D);
		poly.registerNode(SDFBoxJsNode, CATEGORY_JS.SDF_PRIMITIVES);
		poly.registerNode(SDFIntersectJsNode, CATEGORY_JS.SDF_MODIFIERS);
		poly.registerNode(SDFRevolutionJsNode, CATEGORY_JS.SDF_MODIFIERS);
		poly.registerNode(SDFSphereJsNode, CATEGORY_JS.SDF_PRIMITIVES);
		poly.registerNode(SDFSubtractJsNode, CATEGORY_JS.SDF_MODIFIERS);
		poly.registerNode(SDFUnionJsNode, CATEGORY_JS.SDF_MODIFIERS);
		poly.registerNode(SetObjectAttributeJsNode, CATEGORY_JS.ACTION, ONLY_ACTOR);
		poly.registerNode(SetObjectLookAtJsNode, CATEGORY_JS.ACTION, ONLY_ACTOR);
		poly.registerNode(SetObjectMaterialJsNode, CATEGORY_JS.ACTION, ONLY_ACTOR);
		poly.registerNode(SetObjectMaterialColorJsNode, CATEGORY_JS.ACTION, ONLY_ACTOR);
		poly.registerNode(SetObjectPositionJsNode, CATEGORY_JS.ACTION, ONLY_ACTOR);
		poly.registerNode(SetObjectScaleJsNode, CATEGORY_JS.ACTION, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDAngularVelocityJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDLinearVelocityJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDPositionJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDRotationJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDCapsulePropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDConePropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDCylinderPropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDCuboidPropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsRBDSpherePropertyJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SetPhysicsWorldGravityJsNode, CATEGORY_JS.PHYSICS, ONLY_ACTOR);
		poly.registerNode(SignJsNode, CATEGORY_JS.MATH);
		poly.registerNode(SinJsNode, CATEGORY_JS.MATH);
		poly.registerNode(SqrtJsNode, CATEGORY_JS.MATH);
		poly.registerNode(SubtractJsNode, CATEGORY_JS.MATH);
		poly.registerNode(SwitchJsNode, CATEGORY_JS.LOGIC);
		poly.registerNode(TanJsNode, CATEGORY_JS.MATH);
		poly.registerNode(TwoWaySwitchJsNode, CATEGORY_JS.LOGIC);
		poly.registerNode(Vec2ToFloatJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec2ToVec3JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec3ToFloatJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec3ToColorJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec3ToVec2JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec3ToVec4JsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec4ToFloatJsNode, CATEGORY_JS.CONVERSION);
		poly.registerNode(Vec4ToVec3JsNode, CATEGORY_JS.CONVERSION);
	}
}
